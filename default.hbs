<!DOCTYPE html>
<html lang="{{@site.lang}}">
<head>

    {{!-- Document Settings --}}
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    {{!-- Base Meta --}}
    <title>{{meta_title}}</title>
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    {{!-- Styles'n'Scripts --}}
    <link rel="stylesheet" type="text/css" href="{{asset "built/tocbot.css"}}" />

    <link rel="stylesheet" type="text/css" href="{{asset "built/screen.css"}}" />

    <style>
        /* This font-face is here to make icons work if the Ghost instance is installed in a subdirectory */
        @font-face {
            font-family: 'icomoon';
            src: url("{{asset 'built/fonts/icomoon.eot?vukg2s'}}");
            src: url("{{asset 'built/fonts/icomoon.eot?vukg2s#iefix'}}") format('embedded-opentype'),
            url("{{asset 'built/fonts/icomoon.ttf?vukg2s'}}") format('truetype'),
            url("{{asset 'built/fonts/icomoon.woff?vukg2s'}}") format('woff'),
            url("{{asset 'built/fonts/icomoon.svg?vukg2s#icomoon'}}") format('svg');
            font-weight: normal;
            font-style: normal;
            font-display: swap;
        }
    </style>

    <link rel="stylesheet" type="text/css" href="{{asset "built/search.css"}}" />

    {{!-- This tag outputs SEO meta+structured data and other important settings --}}
    {{ghost_head}}

</head>
<body class="{{body_class}}">

    <div class="site-wrapper">

        {{!-- All the main content gets inserted here, index.hbs, post.hbs, etc --}}
        {{{body}}}

        {{!-- Search form --}}
        {{> search}}

        {{!-- The footer at the very bottom of the screen --}}
        <footer class="site-footer outer">
            <div class="site-footer-content inner">
                <section class="copyright"><a href="{{@site.url}}">{{@site.title}}</a> &copy; {{date format="YYYY"}}</section>
                <nav class="site-footer-nav">
                    <a href="{{@site.url}}">Latest Posts</a>
                    {{#if @site.facebook}}<a href="{{facebook_url @site.facebook}}" target="_blank" rel="noopener">Facebook</a>{{/if}}
                    {{#if @site.twitter}}<a href="{{twitter_url @site.twitter}}" target="_blank" rel="noopener">Twitter</a>{{/if}}
                    <a href="https://ghost.org" target="_blank" rel="noopener">Ghost</a>
                </nav>
            </div>
        </footer>

    </div>

    {{!-- The big email subscribe modal content --}}
    {{#if @labs.members}}
    <div class="subscribe-success-message">
        <a class="subscribe-close" href="javascript:;"></a>
        You've successfully subscribed to {{@site.title}}!
    </div>

    <div id="subscribe" class="subscribe-overlay">
        <a class="subscribe-close-overlay" href="#"></a>
        <a class="subscribe-close-button" href="#"></a>
        <div class="subscribe-overlay-content">
            {{#if @site.logo}}
                <img class="subscribe-overlay-logo" src="{{@site.logo}}" alt="{{@site.title}}" />
            {{/if}}
            <div class="subscribe-form">
                <h1 class="subscribe-overlay-title">Subscribe to {{@site.title}}</h1>
                <p class="subscribe-overlay-description">Stay up to date! Get all the latest & greatest posts delivered straight to your inbox</p>
                <form data-members-form="subscribe">
                    <div class="form-group">
                        <input class="subscribe-email" data-members-email placeholder="youremail@example.com"
                            autocomplete="false" />
                        <button class="button primary" type="submit">
                            <span class="button-content">Subscribe</span>
                            <span class="button-loader">{{> "icons/loader"}}</span>
                        </button>
                    </div>
                    <div class="message-success">
                        <strong>Great!</strong> Check your inbox and click the link to confirm your subscription.
                    </div>
                    <div class="message-error">
                        Please enter a valid email address!
                    </div>
                </form>
            </div>
        </div>
    </div>
    {{/if}}

    {{!-- jQuery, required for fitvids --}}
    <script src="https://code.jquery.com/jquery-3.5.1.min.js">
    </script>
    {{!-- Fitvids (for responsive video embeds), infinite scroll, floating header, and gallery card support --}}
    <script src="{{asset "built/casper.js"}}"></script>

    {{!-- Scripts for Members subscription --}}
    <script>
        // Parse the URL parameter
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        // Give the parameter a variable name
        var action = getParameterByName('action');

        $(document).ready(function () {
            if (action == 'subscribe') {
                $('body').addClass("subscribe-success");
            }

            $('.subscribe-success-message .subscribe-close').click(function () {
                $('.subscribe-success-message').addClass('close');
            });

            // Reset form on opening subscrion overlay
            $('.subscribe-button').click(function() {
                $('.subscribe-overlay form').removeClass();
                $('.subscribe-email').val('');
            });
        });
    </script>

    {{!-- The #block helper will pull in data from the #contentFor other template files. In this case, there's some JavaScript which we only want to use in post.hbs, but it needs to be included down here, after jQuery has already loaded. --}}
    {{{block "scripts"}}}

    <script>
        function formatDate(date) {
            if (date) {
                return new Date(date).toLocaleDateString(
                    document.documentElement.lang,
                    {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    }
                )
            }

            return ''
        }

        $(document).ready(() => {
            const $body = $('body')
            const $openSearch = $('.js-open-search')
            const $closeSearch = $('.js-close-search')
            const $search = $('.js-search')
            const $inputSearch = $('.js-input-search')
            const $searchResults = $('.js-search-results')
            const $searchNoResults = $('.js-no-results')

            //let fuse = null
            let flexIndexZh = null
            let flexIndexEn = null

            function trySearchFeature() {
                if (typeof ghostSearchApiKey !== 'undefined' && typeof ghostHost !== 'undefined') {
                    getAllPosts(ghostHost, ghostSearchApiKey)
                } else {
                    $openSearch.css('visibility', 'hidden')
                    $closeSearch.remove()
                    $search.remove()
                }
            }

            function toggleScrollVertical() {
                $body.toggleClass('no-scroll-y')
            }

            function getAllPosts(host, key) {
                const api = new GhostContentAPI({
                    url: host,
                    key,
                    version: 'v2'
                })
                const allPosts = []
                /*
                const fuseOptions = {
                    shouldSort: true,
                    threshold: 0,
                    location: 0,
                    distance: 100,
                    tokenize: true,
                    matchAllTokens: false,
                    maxPatternLength: 32,
                    minMatchCharLength: 1,
                    keys: ['title', 'custom_excerpt', 'html']
                }
                */
                const docOption = {
                    doc: {
                        id: "id",
                        field: [
                            "title",
                            "html",
                            "custom_excerpt"
                        ]
                    }
                }
                const flexOptionsZh = {
                    encode: false,
                    tokenize: function(str){
                        return str.replace(/[\x00-\x7F]/g, "").split("");
                    }
                }

                const flexOptionsEn = {
                    encode: 'advanced',
                    tokenize: 'forward'
                }

                api.posts.browse({
                    limit: 'all',
                    fields: 'id, title, url, published_at, custom_excerpt, html'
                })
                    .then((posts) => {
                        for (var i = 0, len = posts.length; i < len; i++) {
                            allPosts.push(posts[i])
                        }

                        //fuse = new Fuse(allPosts, fuseOptions)

                        flexIndexZh = new FlexSearch(Object.assign({}, flexOptionsZh, docOption))
                        flexIndexZh.add(allPosts)

                        flexIndexEn = new FlexSearch(Object.assign({}, flexOptionsEn, docOption))
                        flexIndexEn.add(allPosts)
                    })
                    .catch((err) => {
                        console.log(err)
                    })

            }

            $openSearch.click(() => {
                $search.addClass('opened')
                setTimeout(() => {
                    $inputSearch.focus()
                }, 400);
                toggleScrollVertical()
            })

            $closeSearch.click(() => {
                $inputSearch.blur()
                $search.removeClass('opened')
                toggleScrollVertical()
            })
/*
            $inputSearch.keyup(() => {
                if ($inputSearch.val().length > 0 && fuse) {
                    const results = fuse.search($inputSearch.val())
                    let htmlString = ''

                    if (results.length > 0) {
                        for (var i = 0, len = results.length; i < len; i++) {
                            htmlString += `
          <article class="m-result">\
            <a href="${results[i].item.url}" class="m-result__link">\
              <h3 class="m-result__title">${results[i].item.title}</h3>\
              <span class="m-result__date">${formatDate(results[i].item.published_at)}</span>\
            </a>\
          </article>`
                        }

                        $searchNoResults.hide()
                        $searchResults.html(htmlString)
                        $searchResults.show()
                    } else {
                        $searchResults.html('')
                        $searchResults.hide()
                        $searchNoResults.show()
                    }
                } else {
                    $searchResults.html('')
                    $searchResults.hide()
                    $searchNoResults.hide()
                }
            })
            */

            $inputSearch.keyup(() => {
                if ($inputSearch.val().length > 0 && flexIndexEn && flexIndexZh) {
                    const resultsZh = flexIndexZh.search($inputSearch.val())
                    const resultsEn = flexIndexEn.search($inputSearch.val())

                    const results = resultsZh.concat(resultsEn)
                    let htmlString = ''

                    if (results.length > 0) {
                        let duplicate_ids = []
                        for (var i = 0, len = results.length; i < len; i++) {
                            if (results[i].id in duplicate_ids)
                                continue
                            htmlString += `
          <article class="m-result">\
            <a href="${results[i].url}" class="m-result__link">\
              <h3 class="m-result__title">${results[i].title}</h3>\
              <span class="m-result__date">${formatDate(results[i].published_at)}</span>\
            </a>\
          </article>`
                            duplicate_ids.push(results[i].id)
                        }

                        $searchNoResults.hide()
                        $searchResults.html(htmlString)
                        $searchResults.show()
                    } else {
                        $searchResults.html('')
                        $searchResults.hide()
                        $searchNoResults.show()
                    }
                } else {
                    $searchResults.html('')
                    $searchResults.hide()
                    $searchNoResults.hide()
                }
            })

            trySearchFeature()
        })
    </script>

    {{!-- Ghost outputs important scripts and data with this tag - it should always be the very last thing before the closing body tag --}}
    {{ghost_foot}}

</body>
</html>
